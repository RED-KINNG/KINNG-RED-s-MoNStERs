{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,aCHbC,G,MAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAY,YAAjB,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,WCLdM,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAM,SACNF,YAAeA,EACfG,SAAYF,MCkELG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAEOC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALL,E,gEAUO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,+BAMhC,IAAD,SACyBE,KAAKR,MAA9BR,EADA,EACAA,SAAUS,EADV,EACUA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK3B,UAAU,MAAf,UACE,sDACA,cAAC,EAAD,CACAW,YAAa,kBACbC,aAAgB,SAACiB,GAAD,OACd,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEvC,cAAC,EAAD,CAAUvB,SAAYiB,W,GApCZO,aCnBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c09cc4e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'> \r\n        <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    \r\n    <div className = 'card-list'> \r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster = {monster} />))\r\n    }\r\n    </div>\r\n)","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className='search'\r\n        type ='search' \r\n        placeholder = {placeholder}\r\n        onChange = {handleChange}\r\n    />\r\n)","\n// 1. import react and add component\nimport React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport './App.css';\nimport {SearchBox}from './components/search-box/search-box.component.jsx'\n\n// 2. replace function with class because it has more functionality and to have access to render method inside our app, but  first import component. see default code in react below.\n\n// function App() {\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n// }\n\n// 3. Based from the default code above rewrite it to like the one below everytime. copy and paste return method above inside the render method.\nclass App extends Component {\n\n  // 4. Class component also gives us access to  \"state\", a Javascript object with properties that can be modified\n  constructor() {\n    super();\n\n      this.state = {\n        monsters: [],\n        searchField: ''\n\n      };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}) )\n  }\n  \n  // 5. anything between curly braces in JSX is a javascript expression which is something that produces a value as below\n  // 6. there are different Methods within the \"Component Property\" of react such as render () method\n    \n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n\n    return (\n      <div className=\"App\">\n        <h1>RED KINNG's MONSTERS</h1>\n        <SearchBox\n        placeholder ='search monsters' \n        handleChange = {(e) =>\n          this.setState({searchField: e.target.value})}\n        />\n        <CardList monsters = {filteredMonsters}/>    \n      \n      </div>\n    ); \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}